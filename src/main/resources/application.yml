server:
  port: 13009

spring:
  profiles:
    default: dev
  jmx:
    enabled: false
  data:
    redis:
      repositories:
        enabled: false
  jackson.default-property-inclusion: non_null
  devtools.livereload.enable: false

management:
  server:
    port: 13119
  endpoints:
    jmx:
      exposure:
        exclude: "*"
    web:
      base-path: "/fcm/actuator"
      exposure:
        include: "health,metrics,prometheus"

jasypt.encryptor.env.name: JASYPT_ENCRYPTOR_PASSWORD

security:
  jwt:
    secret-key: ""
    expiration-time: 700000
    refresh-expiration-time: 8888888888
    refresh-cookie-name: fcm-refresh-token





---
spring:
  config:
    activate:
      on-profile:
        - local
  pid.file: ./application.pid
  # start> only local develop settings
  main:
    lazy-initialization: true
  data:
    jpa:
      repositories:
        bootstrap-mode: lazy
  # end/> only local develop settings

  h2:
    console:
      enabled: true
      path: /h2-console

  redis:
    host: localhost
    port: 6379
    password: ENC(atkBOs3snzhPxbb68g7T6oRz6BYcSd82H60T2UwxAfdZnyd559K4ZPgyxzD+0fgj)
    database: 0

  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 2

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true

  cloud:
    openfeign:
      client:
        config:
          prometheus:
            url: http://localhost:9090
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: full
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: basic



fcm-apps:
  -
    name: ecobridge
    google-application-credentials: ./keys/serviceAccountKey-ecobridge.json
    connection-timeout: 5 # seconds
    read-timeout: 10 # seconds set 10~30
    db-push: false  # true: db fcm send
    db-minus-time: 5m  # 5s 5 seconds , 5m 5 minutes, 5h 5 hours, 2d 2 days  => row created_time >=  now() - (minus time)
    db-log: true # fcm send success/fail db log

db:
  scheduled:
    fixed-rate: 5000 # ms  scheduled time
  scrape:
    thread:
      pool:
        size: 2
---
spring:
  config:
    activate:
      on-profile:
        - dev
  pid.file: "./application.pid"

  redis:
    host: localhost
    port: 6379
    password: ENC(atkBOs3snzhPxbb68g7T6oRz6BYcSd82H60T2UwxAfdZnyd559K4ZPgyxzD+0fgj)
    database: 0

  datasource:
    url: ENC(M3W/gAngWlI6P2k24bJ1IrnRNRw2rOcb3UMV4UDMacrqZFm1AZQQRLSyzNfhrYKin2wbsT1Btzr2qnp+AEVxUNq9g/pNnBXk5cOHr3uh4TU=)
    username: ENC(7m3a5fFbtYv0z0foT5TV/z7lIJvq4cYi1DOrOZtYw2bqa9mqtUiLfsIZ/WDl/Uq4)
    password: ENC(8idO4bt8sN7lRk2EHCdr9tNBeb772Ckq77om8en+YWMDfrW5oz1YAlqcdWJuczx1)
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: "fcm_owner"  # change
      connection-timeout: 30000
      maximum-pool-size: 10

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: "fcm_owner"  # change
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true

  cloud:
    openfeign:
      client:
        config:
          prometheus:
            url: http://localhost:9090
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: full
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: basic
fcm-apps:
  -
    name: ecobridge
    google-application-credentials: ./keys/serviceAccountKey-ecobridge.json
    connection-timeout: 5 # firebase connection seconds
    read-timeout: 10 # firebase read timeout seconds set 10~30
    db-push: false  # true: db insert fcm send
    db-minus-time: 5m  # 5s 5 seconds , 5m 5 minutes, 5h 5 hours  => row created_time >=  now() - (minus time)
    db-log: true # fcm send success/fail db log

db:
  schema: "fcm_owner"
  scheduled:
    fixed-rate: 5000 # ms  scheduled time
  scrape:
    thread:
      pool:
        size: 5
---
spring:
  config:
    activate:
      on-profile:
        - prod
  pid.file: "./application.pid"

  redis:
    host: localhost
    port: 6379
    password: ENC(atkBOs3snzhPxbb68g7T6oRz6BYcSd82H60T2UwxAfdZnyd559K4ZPgyxzD+0fgj)
    database: 0

  datasource:
    url: ENC(DfolngJOvmVHdU6JsObUg2mtU0+kcbcjYBaWv6C7jkozTWiIGYADxy3QtqwXxzU7HVAq495iqM6KsuMJsI5L3AhRLmG6wa6n8IhIF4gs0bs=)
    username: ENC(bVlmVthKcLKTpvRC4g+i4PzjWSfDRNv1RA4nE9IGWr677LqrebcPYZ8Rr6x2tHWS)
    password: ENC(oJxdyDfYlbmNfvm7ebuVIUChDDOp9lxgBaeQZ09/E9Payhetk73hAYPGVy4+okj0)
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: "fcm_owner"  # change
      connection-timeout: 30000
      maximum-pool-size: 20

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: "fcm_owner"  # change
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        use_sql_comments: false

  cloud:
    openfeign:
      client:
        config:
          prometheus:
            url: http://localhost:9090
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: full
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: basic
fcm-apps:
  -
    name: ecobridge
    google-application-credentials: ./keys/serviceAccountKey-ecobridge.json
    connection-timeout: 5 # seconds
    read-timeout: 20 # seconds set 10~30
    db-push: true  # true: db insert fcm send
    db-minus-time: 5m  # 5s 5 seconds , 5m 5 minutes, 5h 5 hours  => row created_time >=  now() - (minus time)
    db-log: true # fcm send success/fail db log

db:
  schema: "fcm_owner"
  scheduled:
    fixed-rate: 5000 # ms  scheduled time
  scrape:
    thread:
      pool:
        size: 10